plugins {
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.modrinth.minotaur" version "2.+"
    id 'net.darkhax.curseforgegradle' version '1.1.15'
}
loom {
    forge {
        mixinConfig "infinitybuttons-common.mixins.json"
        mixinConfig "infinitybuttons.mixins.json"
    }
}
architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin since it *excludes* files.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.forge_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury-forge:${rootProject.architectury_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionForge")) { transitive = false }
}

modrinth {
    token = System.getenv("MODRINTH_TOKEN")
    projectId = "infinitybuttons"
    versionNumber = "${mod_version}-fabric-${minecraft_version}"
    versionType = "release"
    uploadFile = remapJar
    gameVersions = ["1.20.2", "1.20.3", "1.20.4"]
    dependencies {
        required.project "yacl"

        optional.project "jade"
        optional.project "every-compat"
        optional.project "quark"
        optional.project "create"
        optional.project "nethers-delight"
        optional.project "woodworks"
        optional.project "environmental"
        optional.project "endergetic"
        optional.project "autumnity"
        optional.project "abundance"
        optional.project "atmospheric"
        optional.project "bayou-blues"
        optional.project "enhanced-mushrooms"
        optional.project "upgrade-aquatic"
        optional.project "buzzier-bees"
        optional.project "neapolitan"
        optional.project "savage-and-ravage"
    }
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = System.getenv("CURSEFORGE_TOKEN")
    disableVersionDetection()
    def mainFile = upload("661902", remapJar)
    mainFile.displayName = "${mod_version} Forge ${minecraft_version}"
    mainFile.changelog = rootProject.file("CHANGELOG_LATEST.md").text
    mainFile.changelogType = "markdown"
    mainFile.releaseType = "release"
    mainFile.addModLoader("Forge")
    mainFile.addGameVersion("1.20.2", "1.20.3", "1.20.4")
    mainFile.addOptional("jade", "every-compat", "quark", "create", "nethers-delight", "woodworks", "carpenter", "environmental", "endergetic", "autumnity", "abundance", "atmospheric", "bayou-blues", "enhanced-mushrooms", "upgrade-aquatic", "buzzier-bees", "neapolitan", "savage-and-ravage")
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

shadowJar {
    exclude "fabric.mod.json"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "dev-shadow"
}

remapJar {
    inputFile.set(shadowJar.archiveFile)
    dependsOn shadowJar
    archiveClassifier.set(null)
}

jar {
    archiveClassifier.set("dev")
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenForge(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
